@page "/Register"
@using Microsoft.Extensions.Logging
@using GlowingNews.Client.Models.Auth
@using GlowingNews.Client.Services.Interfaces
@inject IAuthService AuthService


<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator/>
    <MudGrid Class="animate__animated animate__fadeIn ">
        <MudItem xs="12" sm="7">
            <MudCard Class="visibility border">
                <MudChip Text="pink" Variant="Variant.Text" Color="Color.Secondary">Register</MudChip>
                <MudCardContent>
                    <MudTextField @onfocusout="ClearErrors" Label="Email" HelperText="Max. 50 characters"
                                  @bind-Value="model.Email" For="@(() => model.Email)"/>

                    <MudTextField @onfocusout="ClearErrors" Label="UserName" HelperText="Max. 50 characters"
                                  @bind-Value="model.UserName" For="@(() => model.UserName)"/>

                    <MudTextField @onfocusout="ClearErrors" Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                  @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password"/>

                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudImage Src="/images/Auth.png" Width="332" Height="265" Alt="Swedish Farm House" Elevation="25" Class="rounded-lg ma-4 visibility border"/>
        </MudItem>
    </MudGrid>
</EditForm>

<MudDialog @bind-IsVisible="successAlert">
    <DialogContent>
        <MudAlert Severity="Severity.Success" Variant="Variant.Outlined">your account has been created successfully Please Login</MudAlert>

    </DialogContent>
    <DialogActions>
        <MudNavLink Href="Login" Match="NavLinkMatch.Prefix">
            <MudButton StartIcon="@Icons.Material.Filled.Login" Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary">Login</MudButton>
        </MudNavLink>
    </DialogActions>

</MudDialog>

@code {
    private EditContext? editContext;
    static RegisterModel model = new();
    private ValidationMessageStore? messageStore;
    private bool successAlert;

    private void OpenSuccessAlert() => successAlert = true;

    protected override void OnInitialized()
    {
        editContext = new(model);
        messageStore = new(editContext);
    }

    private void ClearErrors()
    {
        messageStore?.Clear();
        editContext?.NotifyValidationStateChanged();
    }

    private void AddValidationError(string fieldName, string errorMessage)
    {
        messageStore?.Add(new FieldIdentifier(model, fieldName), errorMessage);
    }

    private async Task OnValidSubmit(EditContext context)
    {
        await HandleRegister();
    }

    private async Task HandleRegister()
    {
        var result = await AuthService.Register(model);

        if (result.IsT1)
        {
            OpenSuccessAlert();
        }
        if (result.IsT2)
        {
            messageStore?.Clear();
            foreach (var validation in result.AsT2)
            {
                messageStore?.Add(new FieldIdentifier(model, validation.Field), validation.Error);
            }
            editContext?.NotifyValidationStateChanged();
        }
    }
}